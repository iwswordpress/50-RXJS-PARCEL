{"id":"LDty","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\connect.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\connect.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../Subject","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\connect.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\Subject.js"},{"name":"../observable/from","loc":{"line":2,"column":21},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\connect.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\from.js"},{"name":"../util/lift","loc":{"line":3,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\connect.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"../observable/fromSubscribable","loc":{"line":4,"column":33},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\connect.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\fromSubscribable.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.connect=b;var e=require(\"../Subject\"),r=require(\"../observable/from\"),o=require(\"../util/lift\"),t=require(\"../observable/fromSubscribable\"),u={connector:function(){return new e.Subject}};function b(e,b){void 0===b&&(b=u);var c=b.connector;return(0,o.operate)(function(o,u){var b=c();(0,r.from)(e((0,t.fromSubscribable)(b))).subscribe(u),u.add(o.subscribe(b))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":84}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":146}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":148}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":172}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":174}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":182}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":1,"column":216}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":19,"column":47},"generated":{"line":1,"column":218}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":229}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":1,"column":247}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":20,"column":23},"generated":{"line":1,"column":251}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":97,"column":6},"generated":{"line":1,"column":263}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":97,"column":16},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":98,"column":2},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":1,"column":284}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":1,"column":292}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":2},"generated":{"line":1,"column":294}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":10},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":10},"generated":{"line":1,"column":301}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":24},"generated":{"line":1,"column":303}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":30},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":17},"generated":{"line":1,"column":324}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":17},"generated":{"line":1,"column":326}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":17},"generated":{"line":1,"column":335}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":18},"generated":{"line":1,"column":344}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":102,"column":26},"generated":{"line":1,"column":346}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":1,"column":349}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":1,"column":353}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":20},"generated":{"line":1,"column":355}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":1,"column":360}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":1,"column":362}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":1,"column":370}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":18},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":35},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":35},"generated":{"line":1,"column":377}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":35},"generated":{"line":1,"column":395}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":46},"generated":{"line":1,"column":400}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":56},"generated":{"line":1,"column":410}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":1,"column":413}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":15},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":19},"generated":{"line":1,"column":419}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":26},"generated":{"line":1,"column":421}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":36},"generated":{"line":1,"column":431}}],"sources":{"../../../../src/internal/operators/connect.ts":"import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { from } from '../observable/from';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ### Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { defer, of } from 'rxjs';\n * import { tap, connect } from 'rxjs/operators';\n *\n * const source$ = defer(() => {\n *  console.log('subscription started');\n *  return of(1, 2, 3, 4, 5).pipe(\n *    tap(n => console.log(`source emitted ${n}`))\n *  );\n * });\n *\n * source$.pipe(\n *  // Notice in here we're merging 3 subscriptions to `shared$`.\n *  connect((shared$) => merge(\n *      shared$.pipe(map(n => `all ${n}`)),\n *      shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${n}`)),\n *      shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${n}`)),\n *  ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * \"subscription started\"\n * \"source emitted 1\"\n * \"all 1\"\n * \"odd 1\"\n * \"source emitted 2\"\n * \"all 2\"\n * \"even 2\"\n * \"source emitted 3\"\n * \"all 3\"\n * \"odd 3\"\n * \"source emitted 4\"\n * \"all 4\"\n * \"even 4\"\n * \"source emitted 5\"\n * \"all 5\"\n * \"odd 5\"\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * the operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    from(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"5f7f1c71e047e2f8fe38e7be3057e309","cacheData":{"env":{}}}