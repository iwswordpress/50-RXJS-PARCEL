{"id":"jiHB","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchMapTo.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\switchMapTo.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"./switchMap","loc":{"line":1,"column":26},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchMapTo.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchMap.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\switchMapTo.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.switchMapTo=i;var t=require(\"./switchMap\"),e=require(\"../util/isFunction\");function i(i,r){return(0,e.isFunction)(r)?(0,t.switchMap)(function(){return i},r):(0,t.switchMap)(function(){return i})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":63,"column":1},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":58,"column":6},"generated":{"line":1,"column":151}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":58,"column":16},"generated":{"line":1,"column":160}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":162}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":1,"column":164}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":1,"column":167}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":1,"column":174}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":176}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":178}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":38},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":1,"column":198}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":48},"generated":{"line":1,"column":209}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":54},"generated":{"line":1,"column":220}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":54},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":71},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":89},"generated":{"line":1,"column":234}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":99},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":99},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":99},"generated":{"line":1,"column":249}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":105},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":62,"column":105},"generated":{"line":1,"column":267}}],"sources":{"../../../../src/internal/operators/switchMapTo.ts":"import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n"},"lineCount":null}},"error":null,"hash":"d0129bda7651400f2493f93c929f2a31","cacheData":{"env":{}}}