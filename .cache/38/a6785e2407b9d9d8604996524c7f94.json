{"id":"iK1I","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\throttleTime.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\throttleTime.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../scheduler/async","loc":{"line":1,"column":31},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\throttleTime.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\scheduler\\async.js"},{"name":"./throttle","loc":{"line":2,"column":48},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\throttleTime.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\throttle.js"},{"name":"../observable/timer","loc":{"line":3,"column":22},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\throttleTime.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\timer.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.throttleTime=o;var e=require(\"../scheduler/async\"),r=require(\"./throttle\"),t=require(\"../observable/timer\");function o(o,i,u){void 0===i&&(i=e.asyncScheduler),void 0===u&&(u=r.defaultThrottleConfig);var l=(0,t.timer)(o,i);return(0,r.throttle)(function(){return l},u)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":90,"column":1},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":127}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":151}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":153}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":8},"generated":{"line":1,"column":275}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":8},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":20},"generated":{"line":1,"column":282}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":26},"generated":{"line":1,"column":284}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":26},"generated":{"line":1,"column":286}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":26},"generated":{"line":1,"column":293}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":88,"column":36},"generated":{"line":1,"column":295}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":9},"generated":{"line":1,"column":298}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":9},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":18},"generated":{"line":1,"column":307}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":18},"generated":{"line":1,"column":309}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":18},"generated":{"line":1,"column":319}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":24},"generated":{"line":1,"column":330}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":24},"generated":{"line":1,"column":337}},{"source":"../../../../src/internal/operators/throttleTime.ts","name":null,"original":{"line":89,"column":35},"generated":{"line":1,"column":340}}],"sources":{"../../../../src/internal/operators/throttleTime.ts":"import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config = defaultThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n"},"lineCount":null}},"error":null,"hash":"0f49124dc3d97e54fa405502ec1d29a6","cacheData":{"env":{}}}