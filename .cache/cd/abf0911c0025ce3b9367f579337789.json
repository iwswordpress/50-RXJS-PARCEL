{"id":"tL0j","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeScan.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\mergeScan.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeScan.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./mergeInternals","loc":{"line":2,"column":31},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeScan.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeInternals.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.mergeScan=n;var e=require(\"../util/lift\"),r=require(\"./mergeInternals\");function n(n,t,u){return void 0===u&&(u=1/0),(0,e.operate)(function(e,i){var o=t;return(0,r.mergeInternals)(e,i,function(e,r){return n(o,e,r)},u,function(e){o=e},!1,void 0,function(){return o=null})})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":1,"column":148}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":1,"column":159}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":9},"generated":{"line":1,"column":166}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":1,"column":178}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":1,"column":182}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":1,"column":186}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":72,"column":2},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":9},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":17},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":17},"generated":{"line":1,"column":198}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":17},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":216}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":1,"column":218}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":225}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":76,"column":16},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":1,"column":229}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":14},"generated":{"line":1,"column":271}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":24},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":24},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":36},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":43},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":81,"column":50},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":82,"column":6},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":1,"column":293}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":83,"column":7},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":84,"column":8},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":84,"column":16},"generated":{"line":1,"column":307}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":311}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":87,"column":6},"generated":{"line":1,"column":318}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":1,"column":320}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":88,"column":13},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":88,"column":13},"generated":{"line":1,"column":338}},{"source":"../../../../src/internal/operators/mergeScan.ts","name":null,"original":{"line":88,"column":21},"generated":{"line":1,"column":340}}],"sources":{"../../../../src/internal/operators/mergeScan.ts":"import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represent the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { mapTo, mergeScan } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"38e44fbcc3c8a0e4749f9b56bdcf05ed","cacheData":{"env":{}}}