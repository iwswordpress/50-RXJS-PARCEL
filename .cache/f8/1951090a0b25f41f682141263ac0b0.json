{"id":"yD5B","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMapTo.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\mergeMapTo.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"./mergeMap","loc":{"line":1,"column":25},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMapTo.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMap.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeMapTo.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.mergeMapTo=t;var e=require(\"./mergeMap\"),r=require(\"../util/isFunction\");function t(t,n,u){return void 0===u&&(u=1/0),(0,r.isFunction)(n)?(0,e.mergeMap)(function(){return t},n,u):(\"number\"==typeof n&&(u=n),(0,e.mergeMap)(function(){return t},u))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":103}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":117}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":127}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":56,"column":6},"generated":{"line":1,"column":149}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":56,"column":16},"generated":{"line":1,"column":158}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":1,"column":160}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":1,"column":162}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":164}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":167}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":179}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":183}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":187}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":61,"column":17},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":61,"column":17},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":61,"column":17},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":1,"column":229}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":1,"column":247}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":43},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":62,"column":59},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":64,"column":32},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":1,"column":273}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":1,"column":277}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":65,"column":17},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/mergeMapTo.ts","name":null,"original":{"line":67,"column":41},"generated":{"line":1,"column":318}}],"sources":{"../../../../src/internal/operators/mergeMapTo.ts":"import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { mergeMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n"},"lineCount":null}},"error":null,"hash":"157b9d668f448355746677fb8bedf093","cacheData":{"env":{}}}