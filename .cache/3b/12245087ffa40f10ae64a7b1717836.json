{"id":"Bk5Z","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\findIndex.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\findIndex.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\findIndex.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./find","loc":{"line":2,"column":27},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\findIndex.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.findIndex=t;var e=require(\"../util/lift\"),r=require(\"./find\");function t(t,i){return(0,e.operate)((0,r.createFind)(t,i,\"index\"))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":1,"column":138}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":1,"column":147}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":1,"column":149}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":1,"column":151}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":154}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":165}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":28},"generated":{"line":1,"column":177}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":28},"generated":{"line":1,"column":179}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":28},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":39},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":48},"generated":{"line":1,"column":195}}],"sources":{"../../../../src/internal/operators/findIndex.ts":"import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n"},"lineCount":null}},"error":null,"hash":"004282f2f41ed1f88783644ce636fcb4","cacheData":{"env":{}}}