{"id":"XYg7","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\find.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.find=t,exports.createFind=n;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(r,t){return(0,e.operate)(n(r,t,\"value\"))}function n(e,t,n){var i=\"index\"===n;return function(n,u){var o=0;n.subscribe(new r.OperatorSubscriber(u,function(r){var c=o++;e.call(t,r,c,n)&&(u.next(i?c:r),u.complete())},function(){u.next(i?-1:void 0),u.complete()}))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":81}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":83}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":1},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":110}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":136}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":1,"column":168}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":1,"column":177}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":1,"column":179}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":1,"column":181}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":17},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":17},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":17},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":28},"generated":{"line":1,"column":206}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":39},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":1,"column":210}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":1,"column":220}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":66,"column":16},"generated":{"line":1,"column":229}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":1,"column":231}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":68,"column":2},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":235}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":71,"column":20},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":9},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":9},"generated":{"line":1,"column":263}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":10},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":277}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":73,"column":16},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":74,"column":4},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":74,"column":11},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":75,"column":6},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":75,"column":10},"generated":{"line":1,"column":301}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":75,"column":6},"generated":{"line":1,"column":303}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":1,"column":324}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":1,"column":333}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":16},"generated":{"line":1,"column":336}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":16},"generated":{"line":1,"column":340}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":20},"generated":{"line":1,"column":342}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":346}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":24},"generated":{"line":1,"column":348}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":29},"generated":{"line":1,"column":353}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":38},"generated":{"line":1,"column":355}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":45},"generated":{"line":1,"column":357}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":48},"generated":{"line":1,"column":359}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":12},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":23},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":28},"generated":{"line":1,"column":371}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":40},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":44},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":12},"generated":{"line":1,"column":378}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":23},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":8},"generated":{"line":1,"column":393}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":1,"column":404}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":21},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":26},"generated":{"line":1,"column":411}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":39},"generated":{"line":1,"column":414}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":43},"generated":{"line":1,"column":421}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":10},"generated":{"line":1,"column":424}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":21},"generated":{"line":1,"column":426}}],"sources":{"../../../../src/internal/operators/find.ts":"import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { find } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"897004ab122b7a8e7474465f4a0a314d","cacheData":{"env":{}}}