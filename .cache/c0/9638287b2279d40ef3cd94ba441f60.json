{"id":"YFl4","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\sampleTime.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../scheduler/async","loc":{"line":1,"column":31},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\scheduler\\async.js"},{"name":"./sample","loc":{"line":2,"column":23},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sample.js"},{"name":"../observable/interval","loc":{"line":3,"column":25},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sampleTime.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\interval.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.sampleTime=a;var e=require(\"../scheduler/async\"),r=require(\"./sample\"),s=require(\"../observable/interval\");function a(a,i){return void 0===i&&(i=e.asyncScheduler),(0,r.sample)((0,s.interval)(a,i))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":49,"column":1},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":103}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":125}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":127}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":135}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":147}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":149}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":1,"column":183}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":16},"generated":{"line":1,"column":192}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":30},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":25},"generated":{"line":1,"column":255}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":25},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":25},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/sampleTime.ts","name":null,"original":{"line":48,"column":33},"generated":{"line":1,"column":269}}],"sources":{"../../../../src/internal/operators/sampleTime.ts":"import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { sampleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n"},"lineCount":null}},"error":null,"hash":"f38eb30d9249769ed469be2de5462c8d","cacheData":{"env":{}}}