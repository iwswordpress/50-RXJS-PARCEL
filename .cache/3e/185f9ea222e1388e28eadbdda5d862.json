{"id":"Y2pJ","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\take.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\take.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../observable/empty","loc":{"line":1,"column":22},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\take.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\empty.js"},{"name":"../util/lift","loc":{"line":2,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\take.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\take.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.take=u;var e=require(\"../observable/empty\"),r=require(\"../util/lift\"),t=require(\"./OperatorSubscriber\");function u(u){return u<=0?function(){return e.EMPTY}:(0,r.operate)(function(e,r){var i=0;e.subscribe(new t.OperatorSubscriber(r,function(e){++i<=u&&(r.next(e),u<=i&&r.complete())}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":1,"column":81}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":83}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":146}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":148}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":47,"column":16},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":47,"column":24},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":1,"column":201}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":48,"column":18},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":50,"column":6},"generated":{"line":1,"column":206}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":50,"column":12},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":234}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":14},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":14},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":14},"generated":{"line":1,"column":247}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":15},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":51,"column":23},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":53,"column":15},"generated":{"line":1,"column":271}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":10},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":14},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":10},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":33},"generated":{"line":1,"column":306}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":45},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":54,"column":46},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":14},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":25},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":59,"column":30},"generated":{"line":1,"column":336}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":63,"column":18},"generated":{"line":1,"column":339}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":63,"column":27},"generated":{"line":1,"column":342}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":16},"generated":{"line":1,"column":345}},{"source":"../../../../src/internal/operators/take.ts","name":null,"original":{"line":64,"column":27},"generated":{"line":1,"column":347}}],"sources":{"../../../../src/internal/operators/take.ts":"import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          new OperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n"},"lineCount":null}},"error":null,"hash":"b706b8e88f0396af74f204771ea702b4","cacheData":{"env":{}}}