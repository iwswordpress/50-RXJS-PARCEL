{"id":"Rxir","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\skipLast.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\skipLast.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/identity","loc":{"line":1,"column":25},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\skipLast.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js"},{"name":"../util/lift","loc":{"line":2,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\skipLast.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\skipLast.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.skipLast=i;var e=require(\"../util/identity\"),r=require(\"../util/lift\"),t=require(\"./OperatorSubscriber\");function i(i){return i<=0?e.identity:(0,r.operate)(function(e,r){var u=new Array(i),n=0;return e.subscribe(new t.OperatorSubscriber(r,function(e){var t=n++;if(t<i)u[t]=e;else{var s=t%i,o=u[s];u[s]=e,r.next(o)}})),function(){u=null}})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":1,"column":85}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":101}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":123}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":147}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":149}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":1,"column":181}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":49,"column":28},"generated":{"line":1,"column":192}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":1,"column":209}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":1,"column":232}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":53,"column":15},"generated":{"line":1,"column":241}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":53,"column":23},"generated":{"line":1,"column":243}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":57,"column":12},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":57,"column":12},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":57,"column":24},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":57,"column":28},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":57,"column":34},"generated":{"line":1,"column":262}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":60,"column":12},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":60,"column":19},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":91,"column":15},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":61,"column":8},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":61,"column":15},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":62,"column":10},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":62,"column":14},"generated":{"line":1,"column":292}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":62,"column":10},"generated":{"line":1,"column":294}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":62,"column":33},"generated":{"line":1,"column":313}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":62,"column":45},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":62,"column":46},"generated":{"line":1,"column":324}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":327}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":67,"column":31},"generated":{"line":1,"column":333}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":68,"column":16},"generated":{"line":1,"column":337}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":68,"column":16},"generated":{"line":1,"column":340}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":68,"column":29},"generated":{"line":1,"column":342}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":72,"column":14},"generated":{"line":1,"column":344}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":72,"column":19},"generated":{"line":1,"column":346}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":1,"column":349}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":73,"column":19},"generated":{"line":1,"column":355}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":77,"column":20},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":77,"column":20},"generated":{"line":1,"column":360}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":77,"column":28},"generated":{"line":1,"column":362}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":77,"column":41},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":80,"column":20},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":80,"column":31},"generated":{"line":1,"column":368}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":80,"column":36},"generated":{"line":1,"column":370}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":81,"column":14},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":81,"column":19},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":81,"column":28},"generated":{"line":1,"column":378}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":86,"column":14},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":86,"column":25},"generated":{"line":1,"column":382}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":86,"column":30},"generated":{"line":1,"column":387}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":91,"column":15},"generated":{"line":1,"column":394}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":93,"column":10},"generated":{"line":1,"column":405}},{"source":"../../../../src/internal/operators/skipLast.ts","name":null,"original":{"line":93,"column":17},"generated":{"line":1,"column":407}}],"sources":{"../../../../src/internal/operators/skipLast.ts":"import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          new OperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n"},"lineCount":null}},"error":null,"hash":"6a581e2a712b4ab7ed19ae5d0e43d9c4","cacheData":{"env":{}}}