{"id":"L70n","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sequenceEqual.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\sequenceEqual.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sequenceEqual.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\sequenceEqual.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.sequenceEqual=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(t,n){return void 0===n&&(n=function(e,r){return e===r}),(0,e.operate)(function(e,c){var i=u(),o=u(),f=function(e){c.next(e),c.complete()},s=function(e,t){var u=new r.OperatorSubscriber(c,function(r){var u=t.buffer,c=t.complete;0===u.length?c?f(!1):e.buffer.push(r):!n(r,u.shift())&&f(!1)},function(){e.complete=!0;var r=t.complete,n=t.buffer;r&&f(0===n.length),null==u||u.unsubscribe()});return u};e.subscribe(s(i,o)),t.subscribe(s(o,i))})}function u(){return{buffer:[],complete:!1}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":146,"column":1},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":106}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":132}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":63,"column":16},"generated":{"line":1,"column":165}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":1,"column":167}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":1,"column":169}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":1,"column":172}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":1,"column":192}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":41},"generated":{"line":1,"column":203}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":44},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":50},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":50},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":65,"column":56},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":1,"column":228}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":67,"column":26},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":69,"column":10},"generated":{"line":1,"column":251}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":69,"column":10},"generated":{"line":1,"column":255}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":69,"column":19},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":71,"column":10},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":71,"column":19},"generated":{"line":1,"column":263}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":74,"column":17},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":75,"column":6},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":75,"column":17},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":75,"column":22},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":76,"column":6},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":76,"column":17},"generated":{"line":1,"column":293}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":84,"column":29},"generated":{"line":1,"column":307}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":84,"column":30},"generated":{"line":1,"column":316}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":84,"column":59},"generated":{"line":1,"column":318}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":85,"column":12},"generated":{"line":1,"column":321}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":85,"column":12},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":85,"column":38},"generated":{"line":1,"column":327}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":85,"column":42},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":85,"column":38},"generated":{"line":1,"column":333}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":86,"column":8},"generated":{"line":1,"column":352}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":1,"column":363}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":18},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":18},"generated":{"line":1,"column":370}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":39},"generated":{"line":1,"column":372}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":49},"generated":{"line":1,"column":374}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":26},"generated":{"line":1,"column":381}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":39},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":88,"column":49},"generated":{"line":1,"column":385}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":89,"column":32},"generated":{"line":1,"column":394}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":89,"column":14},"generated":{"line":1,"column":398}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":89,"column":21},"generated":{"line":1,"column":400}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":12},"generated":{"line":1,"column":407}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":23},"generated":{"line":1,"column":409}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":28},"generated":{"line":1,"column":412}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":37},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":47},"generated":{"line":1,"column":417}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":54},"generated":{"line":1,"column":424}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":96,"column":59},"generated":{"line":1,"column":429}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":101,"column":13},"generated":{"line":1,"column":433}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":101,"column":24},"generated":{"line":1,"column":435}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":101,"column":27},"generated":{"line":1,"column":437}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":101,"column":34},"generated":{"line":1,"column":439}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":101,"column":47},"generated":{"line":1,"column":449}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":101,"column":52},"generated":{"line":1,"column":452}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":104,"column":8},"generated":{"line":1,"column":456}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":106,"column":10},"generated":{"line":1,"column":467}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":106,"column":20},"generated":{"line":1,"column":469}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":106,"column":31},"generated":{"line":1,"column":479}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":18},"generated":{"line":1,"column":481}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":18},"generated":{"line":1,"column":485}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":39},"generated":{"line":1,"column":487}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":49},"generated":{"line":1,"column":489}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":28},"generated":{"line":1,"column":498}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":39},"generated":{"line":1,"column":500}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":107,"column":49},"generated":{"line":1,"column":502}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":112,"column":10},"generated":{"line":1,"column":509}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":112,"column":22},"generated":{"line":1,"column":512}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":112,"column":45},"generated":{"line":1,"column":514}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":112,"column":27},"generated":{"line":1,"column":518}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":112,"column":34},"generated":{"line":1,"column":520}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":114,"column":10},"generated":{"line":1,"column":528}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":114,"column":10},"generated":{"line":1,"column":534}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":114,"column":10},"generated":{"line":1,"column":537}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":114,"column":35},"generated":{"line":1,"column":539}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":118,"column":13},"generated":{"line":1,"column":555}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":118,"column":13},"generated":{"line":1,"column":562}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":122,"column":4},"generated":{"line":1,"column":565}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":122,"column":11},"generated":{"line":1,"column":567}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":122,"column":21},"generated":{"line":1,"column":577}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":122,"column":38},"generated":{"line":1,"column":579}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":122,"column":46},"generated":{"line":1,"column":581}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":1,"column":585}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":123,"column":14},"generated":{"line":1,"column":587}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":123,"column":24},"generated":{"line":1,"column":597}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":123,"column":41},"generated":{"line":1,"column":599}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":123,"column":49},"generated":{"line":1,"column":601}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":141,"column":0},"generated":{"line":1,"column":607}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":141,"column":9},"generated":{"line":1,"column":616}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":142,"column":9},"generated":{"line":1,"column":620}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":142,"column":9},"generated":{"line":1,"column":626}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":143,"column":4},"generated":{"line":1,"column":627}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":143,"column":12},"generated":{"line":1,"column":634}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":1,"column":637}},{"source":"../../../../src/internal/operators/sequenceEqual.ts","name":null,"original":{"line":144,"column":14},"generated":{"line":1,"column":647}}],"sources":{"../../../../src/internal/operators/sequenceEqual.ts":"import { Observable } from '../Observable';\n\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```ts\n * import { from, fromEvent } from 'rxjs';\n * import { sequenceEqual, bufferCount, mergeMap, map } from 'rxjs/operators';\n *\n * const codes = innerFrom([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => innerFrom(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided Observable were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: Observable<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = new OperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in it's buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    compareTo.subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"bd1bbf8d9128f8f307a418f4db8ffa23","cacheData":{"env":{}}}