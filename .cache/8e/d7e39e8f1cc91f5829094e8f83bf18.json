{"id":"IAom","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\pairwise.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\pairwise.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\pairwise.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\pairwise.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.pairwise=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(){return(0,e.operate)(function(e,t){var i,u=!1;e.subscribe(new r.OperatorSubscriber(t,function(e){var r=i;i=e,u&&t.next([r,e]),u=!0}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":85}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":101}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":117}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":127}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":151}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":1,"column":160}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":1,"column":164}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":1,"column":171}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":18},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":1,"column":198}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":1,"column":209}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":11},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":10},"generated":{"line":1,"column":225}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":29},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":42},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":14},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":14},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":18},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":268}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":15},"generated":{"line":1,"column":270}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":1,"column":275}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":1,"column":277}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":35},"generated":{"line":1,"column":282}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":36},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":39},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":18},"generated":{"line":1,"column":292}}],"sources":{"../../../../src/internal/operators/pairwise.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      new OperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"a36582c9822c1326f7ba5bbf90d3a2f7","cacheData":{"env":{}}}