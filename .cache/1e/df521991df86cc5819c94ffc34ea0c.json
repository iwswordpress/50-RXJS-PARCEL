{"id":"J7aw","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\takeWhile.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\takeWhile.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\takeWhile.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\takeWhile.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.takeWhile=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(t,i){return void 0===i&&(i=!1),(0,e.operate)(function(e,u){var o=0;e.subscribe(new r.OperatorSubscriber(u,function(e){var r=t(e,o++);(r||i)&&u.next(e),!r&&u.complete()}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":152}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":29},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":78},"generated":{"line":1,"column":165}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":168}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":78},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":78},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":78},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":57,"column":78},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":222}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":1,"column":228}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":60,"column":11},"generated":{"line":1,"column":232}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":61,"column":29},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":61,"column":41},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":61,"column":42},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":62,"column":14},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":62,"column":14},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":62,"column":23},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":62,"column":33},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":62,"column":40},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":63,"column":33},"generated":{"line":1,"column":304}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":63,"column":44},"generated":{"line":1,"column":306}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":63,"column":49},"generated":{"line":1,"column":311}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":64,"column":19},"generated":{"line":1,"column":318}},{"source":"../../../../src/internal/operators/takeWhile.ts","name":null,"original":{"line":64,"column":30},"generated":{"line":1,"column":320}}],"sources":{"../../../../src/internal/operators/takeWhile.ts":"import { OperatorFunction, MonoTypeOperatorFunction, Falsy } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? never : T>;\nexport function takeWhile<T>(\n  predicate: BooleanConstructor,\n  inclusive: false\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? never : T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      new OperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"51f0ed5b8a3fa3f7eb4ea178fe1d802a","cacheData":{"env":{}}}