{"id":"MAnU","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\retryWhen.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\retryWhen.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../Subject","loc":{"line":1,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\retryWhen.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\Subject.js"},{"name":"../util/lift","loc":{"line":2,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\retryWhen.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\retryWhen.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.retryWhen=t;var e=require(\"../Subject\"),r=require(\"../util/lift\"),u=require(\"./OperatorSubscriber\");function t(t){return(0,r.operate)(function(r,i){var n,b,c=!1,o=function(){n=r.subscribe(new u.OperatorSubscriber(i,void 0,void 0,function(r){b||(b=new e.Subject,t(b).subscribe(new u.OperatorSubscriber(i,function(){return n?o():c=!0}))),b&&b.next(r)})),c&&(n.unsubscribe(),n=null,c=!1,o())};o()})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":142}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":152}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":176}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":61,"column":16},"generated":{"line":1,"column":185}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":61,"column":29},"generated":{"line":1,"column":187}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":1,"column":201}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":1,"column":210}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":18},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":62,"column":26},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":228}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":65,"column":8},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":1,"column":232}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":64,"column":20},"generated":{"line":1,"column":235}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":67,"column":10},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":1,"column":239}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":17},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":24},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":12},"generated":{"line":1,"column":268}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":1,"column":270}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":31},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":43},"generated":{"line":1,"column":296}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":54},"generated":{"line":1,"column":303}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":65},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":66},"generated":{"line":1,"column":314}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":70,"column":15},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":71,"column":12},"generated":{"line":1,"column":321}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":71,"column":22},"generated":{"line":1,"column":323}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":71,"column":26},"generated":{"line":1,"column":327}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":71,"column":22},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":72,"column":12},"generated":{"line":1,"column":337}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":72,"column":21},"generated":{"line":1,"column":339}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":72,"column":30},"generated":{"line":1,"column":342}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":14},"generated":{"line":1,"column":352}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":14},"generated":{"line":1,"column":358}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":37},"generated":{"line":1,"column":377}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":49},"generated":{"line":1,"column":379}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":16},"generated":{"line":1,"column":390}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":16},"generated":{"line":1,"column":397}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":27},"generated":{"line":1,"column":399}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":54},"generated":{"line":1,"column":403}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":66},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":83,"column":14},"generated":{"line":1,"column":412}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":12},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":20},"generated":{"line":1,"column":417}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":25},"generated":{"line":1,"column":422}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":90,"column":10},"generated":{"line":1,"column":428}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":1,"column":432}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":95,"column":17},"generated":{"line":1,"column":434}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":96,"column":8},"generated":{"line":1,"column":448}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":96,"column":19},"generated":{"line":1,"column":450}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":98,"column":8},"generated":{"line":1,"column":455}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":98,"column":20},"generated":{"line":1,"column":458}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":100,"column":8},"generated":{"line":1,"column":460}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":1,"column":466}}],"sources":{"../../../../src/internal/operators/retryWhen.ts":"import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n * ```ts\n * import { timer, interval } from 'rxjs';\n * import { map, tap, retryWhen, delayWhen } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   map(val => {\n *     if (val > 5) {\n *       // error will be picked up by retryWhen\n *       throw val;\n *     }\n *     return val;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(val => console.log(`Value ${val} was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(val => timer(val * 1000))\n *     )\n *   )\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * //   0\n * //   1\n * //   2\n * //   3\n * //   4\n * //   5\n * //   \"Value 6 was too high!\"\n * //  --Wait 5 seconds then repeat\n * ```\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an Observable that mirrors the source\n * Observable with the exception of an `error`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        new OperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            notifier(errors$).subscribe(\n              new OperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure teardown\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"b17796d6732c515f013811d2761d9e9c","cacheData":{"env":{}}}