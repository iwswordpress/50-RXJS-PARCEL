{"id":"zXA1","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\zipAll.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\zipAll.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../observable/zip","loc":{"line":1,"column":20},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\zipAll.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\zip.js"},{"name":"./joinAllInternals","loc":{"line":2,"column":33},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\zipAll.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\joinAllInternals.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.zipAll=l;var e=require(\"../observable/zip\"),r=require(\"./joinAllInternals\");function l(l){return(0,r.joinAllInternals)(e.zip,l)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":20,"column":1},"generated":{"line":1,"column":83}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":85}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":1,"column":152}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":18,"column":16},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":18,"column":29},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":166}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":26},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":26},"generated":{"line":1,"column":177}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":26},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/zipAll.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":1,"column":201}}],"sources":{"../../../../src/internal/operators/zipAll.ts":"import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n"},"lineCount":null}},"error":null,"hash":"dc30662162697b7b6a029f51db8ca037","cacheData":{"env":{}}}