{"id":"pzi2","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\single.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/EmptyError","loc":{"line":1,"column":27},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\EmptyError.js"},{"name":"../util/SequenceError","loc":{"line":2,"column":30},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\SequenceError.js"},{"name":"../util/NotFoundError","loc":{"line":3,"column":30},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\NotFoundError.js"},{"name":"../util/lift","loc":{"line":4,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":5,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\single.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.single=n;var r=require(\"../util/EmptyError\"),e=require(\"../util/SequenceError\"),o=require(\"../util/NotFoundError\"),t=require(\"../util/lift\"),u=require(\"./OperatorSubscriber\");function n(n){return(0,t.operate)(function(t,i){var c,s=!1,a=!1,l=0;t.subscribe(new u.OperatorSubscriber(i,function(r){a=!0,n&&!n(r,l++,t)||(s&&i.error(new e.SequenceError(\"Too many matching values\")),s=!0,c=r)},function(){s?(i.next(c),i.complete()):i.error(a?new o.NotFoundError(\"No matching values\"):new r.EmptyError)}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":83}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":85}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":123}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":158}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":166}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":201}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":6},"generated":{"line":1,"column":251}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":16},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":93,"column":26},"generated":{"line":1,"column":262}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":18},"generated":{"line":1,"column":294}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":94,"column":26},"generated":{"line":1,"column":296}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":1,"column":299}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":96,"column":8},"generated":{"line":1,"column":303}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":97,"column":8},"generated":{"line":1,"column":310}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":97,"column":20},"generated":{"line":1,"column":313}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":98,"column":8},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":98,"column":16},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":99,"column":4},"generated":{"line":1,"column":319}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":99,"column":11},"generated":{"line":1,"column":321}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":6},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":10},"generated":{"line":1,"column":335}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":100,"column":6},"generated":{"line":1,"column":337}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":101,"column":8},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":102,"column":8},"generated":{"line":1,"column":358}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":102,"column":9},"generated":{"line":1,"column":367}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":1,"column":370}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":103,"column":22},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":104,"column":15},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":104,"column":28},"generated":{"line":1,"column":379}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":104,"column":38},"generated":{"line":1,"column":381}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":104,"column":45},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":104,"column":54},"generated":{"line":1,"column":387}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":12},"generated":{"line":1,"column":392}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":24},"generated":{"line":1,"column":395}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":35},"generated":{"line":1,"column":397}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":41},"generated":{"line":1,"column":403}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":45},"generated":{"line":1,"column":407}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":41},"generated":{"line":1,"column":409}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":105,"column":59},"generated":{"line":1,"column":423}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":106,"column":12},"generated":{"line":1,"column":452}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":106,"column":23},"generated":{"line":1,"column":455}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":12},"generated":{"line":1,"column":457}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":107,"column":26},"generated":{"line":1,"column":459}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":110,"column":8},"generated":{"line":1,"column":463}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":111,"column":14},"generated":{"line":1,"column":474}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":112,"column":12},"generated":{"line":1,"column":477}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":112,"column":23},"generated":{"line":1,"column":479}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":112,"column":28},"generated":{"line":1,"column":484}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":113,"column":12},"generated":{"line":1,"column":487}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":113,"column":23},"generated":{"line":1,"column":489}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":12},"generated":{"line":1,"column":501}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":23},"generated":{"line":1,"column":503}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":29},"generated":{"line":1,"column":509}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":41},"generated":{"line":1,"column":511}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":45},"generated":{"line":1,"column":515}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":41},"generated":{"line":1,"column":517}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":59},"generated":{"line":1,"column":531}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":83},"generated":{"line":1,"column":553}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":87},"generated":{"line":1,"column":557}},{"source":"../../../../src/internal/operators/single.ts","name":null,"original":{"line":115,"column":83},"generated":{"line":1,"column":559}}],"sources":{"../../../../src/internal/operators/single.ts":"import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only name beginning with 'B':\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1.pipe(\n *   single(x => x.name.startsWith('B'))\n * )\n * .subscribe(x => console.log(x));\n * // Emits \"Ben\"\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2.pipe(\n *   single(x => x.name.startsWith('B'))\n * )\n * .subscribe(x => console.log(x));\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3.pipe(\n *   single(x => x.name.startsWith('B'))\n * )\n * .subscribe(x => console.log(x));\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * that one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"1bc70d27291408d432f3b7c4ce3b5121","cacheData":{"env":{}}}