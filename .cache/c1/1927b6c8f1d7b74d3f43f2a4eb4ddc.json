{"id":"vmtz","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\scanInternals.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\scanInternals.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"./OperatorSubscriber","loc":{"line":1,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\scanInternals.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.scanInternals=r;var e=require(\"./OperatorSubscriber\");function r(r,t,n,u,c){return function(o,s){var i=n,a=t,b=0;o.subscribe(new e.OperatorSubscriber(s,function(e){var t=b++;a=i?r(a,e,t):(i=!0,e),u&&s.next(a)},c&&function(){i&&s.next(a),s.complete()}))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":106}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":1,"column":130}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":1,"column":139}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":1,"column":141}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":143}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":1,"column":145}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":1,"column":147}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":149}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":1,"column":152}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":1,"column":159}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":21,"column":10},"generated":{"line":1,"column":168}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":21,"column":33},"generated":{"line":1,"column":170}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":177}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":25,"column":19},"generated":{"line":1,"column":179}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":181}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":29,"column":21},"generated":{"line":1,"column":183}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":1,"column":185}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":1,"column":187}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":201}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":37,"column":8},"generated":{"line":1,"column":228}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":37,"column":9},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":41,"column":18},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":43,"column":14},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":43,"column":26},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":43,"column":33},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":43,"column":40},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":47,"column":16},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":47,"column":27},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":47,"column":34},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":50,"column":10},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":50,"column":24},"generated":{"line":1,"column":275}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":50,"column":35},"generated":{"line":1,"column":277}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":50,"column":40},"generated":{"line":1,"column":282}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":286}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":55,"column":11},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":56,"column":24},"generated":{"line":1,"column":303}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":56,"column":35},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":56,"column":40},"generated":{"line":1,"column":310}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":57,"column":12},"generated":{"line":1,"column":313}},{"source":"../../../../src/internal/operators/scanInternals.ts","name":null,"original":{"line":57,"column":23},"generated":{"line":1,"column":315}}],"sources":{"../../../../src/internal/operators/scanInternals.ts":"import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"0fd96abcbc994272830e060c98be7939","cacheData":{"env":{}}}