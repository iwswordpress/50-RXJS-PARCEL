{"id":"u7wd","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\tap.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\tap.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/isFunction","loc":{"line":1,"column":27},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\tap.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"},{"name":"../util/lift","loc":{"line":2,"column":24},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\tap.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":35},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\tap.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"},{"name":"../util/identity","loc":{"line":4,"column":25},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\tap.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.tap=n;var e=require(\"../util/isFunction\"),r=require(\"../util/lift\"),t=require(\"./OperatorSubscriber\"),i=require(\"../util/identity\");function n(n,u,o){var l=(0,e.isFunction)(n)||u||o?{next:n,error:u,complete:o}:n;return l?(0,r.operate)(function(e,r){e.subscribe(new t.OperatorSubscriber(r,function(e){var t;null===(t=l.next)||void 0===t||t.call(l,e),r.next(e)},function(){var e;null===(e=l.complete)||void 0===e||e.call(l),r.complete()},function(e){var t;null===(t=l.error)||void 0===t||t.call(l,e),r.error(e)}))}):i.identity}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":80}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":146}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":154}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":178}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":108,"column":6},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":108,"column":16},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":109,"column":2},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":110,"column":2},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":116,"column":8},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":116,"column":8},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":4},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":15},"generated":{"line":1,"column":235}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":15},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":15},"generated":{"line":1,"column":249}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":43},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":54},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":56},"generated":{"line":1,"column":259}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":62},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":100},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":105},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":107},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":115},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":117,"column":120},"generated":{"line":1,"column":286}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":120,"column":9},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":120,"column":9},"generated":{"line":1,"column":295}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":121,"column":6},"generated":{"line":1,"column":298}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":121,"column":14},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":121,"column":14},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":121,"column":14},"generated":{"line":1,"column":311}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":121,"column":15},"generated":{"line":1,"column":320}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":121,"column":23},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":122,"column":15},"generated":{"line":1,"column":327}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":123,"column":10},"generated":{"line":1,"column":337}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":123,"column":14},"generated":{"line":1,"column":341}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":123,"column":10},"generated":{"line":1,"column":343}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":124,"column":12},"generated":{"line":1,"column":362}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":125,"column":12},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":125,"column":13},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":376}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":30},"generated":{"line":1,"column":382}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":14},"generated":{"line":1,"column":390}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":14},"generated":{"line":1,"column":392}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":26},"generated":{"line":1,"column":394}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":30},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":30},"generated":{"line":1,"column":410}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":30},"generated":{"line":1,"column":413}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":30},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":14},"generated":{"line":1,"column":420}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":126,"column":33},"generated":{"line":1,"column":422}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":127,"column":14},"generated":{"line":1,"column":425}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":127,"column":25},"generated":{"line":1,"column":427}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":127,"column":30},"generated":{"line":1,"column":432}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":129,"column":12},"generated":{"line":1,"column":436}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":447}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":451}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":34},"generated":{"line":1,"column":453}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":14},"generated":{"line":1,"column":461}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":14},"generated":{"line":1,"column":463}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":26},"generated":{"line":1,"column":465}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":34},"generated":{"line":1,"column":481}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":34},"generated":{"line":1,"column":485}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":34},"generated":{"line":1,"column":488}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":34},"generated":{"line":1,"column":490}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":130,"column":14},"generated":{"line":1,"column":495}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":131,"column":14},"generated":{"line":1,"column":498}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":131,"column":25},"generated":{"line":1,"column":500}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":133,"column":12},"generated":{"line":1,"column":512}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":133,"column":13},"generated":{"line":1,"column":521}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":524}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":528}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":31},"generated":{"line":1,"column":530}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":14},"generated":{"line":1,"column":538}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":14},"generated":{"line":1,"column":540}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":26},"generated":{"line":1,"column":542}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":31},"generated":{"line":1,"column":555}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":31},"generated":{"line":1,"column":559}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":31},"generated":{"line":1,"column":562}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":31},"generated":{"line":1,"column":564}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":14},"generated":{"line":1,"column":569}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":134,"column":34},"generated":{"line":1,"column":571}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":135,"column":14},"generated":{"line":1,"column":574}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":135,"column":25},"generated":{"line":1,"column":576}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":135,"column":31},"generated":{"line":1,"column":582}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":143,"column":6},"generated":{"line":1,"column":590}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":120,"column":2},"generated":{"line":1,"column":592}}],"sources":{"../../../../src/internal/operators/tap.ts":"import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\nexport function tap<T>(observer?: Partial<Observer<T>>): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next: (value: T) => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Example\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit \"big\" or \"small\" depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * ## Example\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { tap } from 'rxjs/operators';\n *\n * const source = of(1, 2, 3, 4, 5)\n *\n * source.pipe(\n *  tap(n => {\n *    if (n > 3) {\n *      throw new TypeError(`Value ${n} is greater than 3`)\n *    }\n *  })\n * )\n * .subscribe(console.log);\n * ```\n *\n * ## Example\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `\"X\"` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side-effect of logging to console.\n *\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { tap, map, concatMap, take } from 'rxjs/operators';\n *\n *\n * of(1, 2, 3).pipe(\n *  concatMap(n => interval(1000).pipe(\n *    take(Math.round(Math.random() * 10)),\n *    map(() => 'X'),\n *    tap({\n *      complete: () => console.log(`Done with ${n}`)\n *    })\n *  ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link Observable#subscribe}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete ? { next: observerOrNext as (value: T) => void, error, complete } : observerOrNext;\n\n  // TODO: Use `operate` function once this PR lands: https://github.com/ReactiveX/rxjs/pull/5742\n  return tapObserver\n    ? operate((source, subscriber) => {\n        source.subscribe(\n          new OperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n"},"lineCount":null}},"error":null,"hash":"442bdfe7d6d27cf63bcf7dd8425a1a40","cacheData":{"env":{}}}