{"id":"iZKZ","dependencies":[{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\src\\internal\\operators\\last.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\package.json","includedInParent":true,"mtime":1623693486438},{"name":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1623692673362},{"name":"../util/EmptyError","loc":{"line":1,"column":27},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\EmptyError.js"},{"name":"./filter","loc":{"line":2,"column":23},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js"},{"name":"./takeLast","loc":{"line":3,"column":25},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\takeLast.js"},{"name":"./throwIfEmpty","loc":{"line":4,"column":29},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\throwIfEmpty.js"},{"name":"./defaultIfEmpty","loc":{"line":5,"column":31},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\defaultIfEmpty.js"},{"name":"../util/identity","loc":{"line":6,"column":25},"parent":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\last.js","resolved":"C:\\Users\\Owner\\Dropbox\\COURSES\\NDC\\50-RXJS-FORM\\RXJS-PARCEL\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.last=f;var t=require(\"../util/EmptyError\"),e=require(\"./filter\"),r=require(\"./takeLast\"),i=require(\"./throwIfEmpty\"),u=require(\"./defaultIfEmpty\"),n=require(\"../util/identity\");function f(f,o){var p=arguments.length>=2;return function(a){return a.pipe(f?(0,e.filter)(function(t,e){return f(t,e,a)}):n.identity,(0,r.takeLast)(1),p?(0,u.defaultIfEmpty)(o):(0,i.throwIfEmpty)(function(){return new t.EmptyError}))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":83,"column":1},"generated":{"line":1,"column":81}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":83}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":141}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":143}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":151}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":165}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":167}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":203}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":225}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":1,"column":262}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":273}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":76,"column":26},"generated":{"line":1,"column":275}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":76,"column":46},"generated":{"line":1,"column":293}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":1,"column":295}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":311}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":1,"column":314}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":1,"column":321}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":78,"column":11},"generated":{"line":1,"column":323}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":1,"column":328}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":18},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":25},"generated":{"line":1,"column":333}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":25},"generated":{"line":1,"column":335}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":25},"generated":{"line":1,"column":343}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":26},"generated":{"line":1,"column":352}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":29},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":35},"generated":{"line":1,"column":357}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":35},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":45},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":48},"generated":{"line":1,"column":368}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":51},"generated":{"line":1,"column":370}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":79,"column":62},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":1,"column":377}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":1,"column":387}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":1,"column":389}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":1,"column":391}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":1,"column":401}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":1,"column":404}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":24},"generated":{"line":1,"column":407}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":39},"generated":{"line":1,"column":409}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":39},"generated":{"line":1,"column":411}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":39},"generated":{"line":1,"column":427}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":56},"generated":{"line":1,"column":431}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":69},"generated":{"line":1,"column":433}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":69},"generated":{"line":1,"column":435}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":69},"generated":{"line":1,"column":449}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":75},"generated":{"line":1,"column":460}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":75},"generated":{"line":1,"column":467}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":79},"generated":{"line":1,"column":471}},{"source":"../../../../src/internal/operators/last.ts","name":null,"original":{"line":81,"column":75},"generated":{"line":1,"column":473}}],"sources":{"../../../../src/internal/operators/last.ts":"import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Example\n * Last alphabet from the sequence.\n * ```ts\n * import { from } from 'rxjs';\n * import { last } from 'rxjs/operators';\n *\n * const source = from(['x', 'y', 'z']);\n * const example = source.pipe(last());\n * //output: \"Last alphabet: z\"\n * example.subscribe(val => console.log(`Last alphabet: ${val}`));\n * ```\n *\n * Default value when the value in the predicate is not matched.\n * ```ts\n * import { from } from 'rxjs';\n * import { last } from 'rxjs/operators';\n *\n * const source = from(['x', 'y', 'z']);\n * const example = source.pipe(last(char => char === 'a','not exist'));\n * //output: \"'a' is not exist.\"\n * example.subscribe(val => console.log(`'a' is ${val}.`));\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n"},"lineCount":null}},"error":null,"hash":"6c9b75b0fcbbe1dd08aa418366404041","cacheData":{"env":{}}}